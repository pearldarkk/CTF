from z3 import *
from Crypto.Util.number import GCD, long_to_bytes
from gmpy2 import iroot

f = open('output.txt', 'r')
n = int(f.readline())
s1 = int(f.readline())
s2 = int(f.readline())
c = int(f.readline())
f.close()
e = 65537
p = [0 for _ in range(5)]
p[2] = GCD(n, s1)
# print(p[2])

x = Int('x')
# solve(x > 0, p[2] * p[2] + p[2] * x + x * x * p[2] + p[2] * p[2] * x == s1)
p[1] = 18635768166647350342441965373067930587390572936670070711729558640059683171588230770807050761816750304940618228339774809236267750611388524303910333065140961266466049514312589548646366981318085018346372231599966433995751926632822114751130456398374847003730153117463124591682444484130213661754770405342132046835210280544971384579504947655404701131625016457278775984207415708989571415037039046010128289473247490488070041549761896484626157176982080893601288176659354909034760695338413565050279461390202358819646299541884659799485709569400404884898083883726749561196784448291074598982404348243395302962215813996259969887159
# solve(x > 0, p[2] * p[2] * (x + 1) - 1 + p[1] * p[2] * (x + 1) - 1 == s2)
p[3] = 16335897006050479233637668856356008295565965462513968998989200515310504101536957724865853970223880027855357942982467535975062755847783488408458353163397886880011730128065739178756577030740932692961168554520715669706478424683313407158791408867096238470312630616235057394422004843953936903586880085146801122680264213672531526750932057924248298690602380033154365756086775247315138983350145488027424697972776382257968084160711727495808343295149862046691001154795894661071997653281115170849347604833755388614573762270014580167584335699761397136544105029659844818332001583809853605339922503468883895265492216306084113308727
n = n // (p[1] * p[2] * p[3])
print(n)
exit()
(p[4], p[0]) = fermat(n)
